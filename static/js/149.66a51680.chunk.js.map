{"version":3,"file":"static/js/149.66a51680.chunk.js","mappings":"+OAGaA,EAAcC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sHAQxBC,EAAeC,EAAAA,KAAaC,MAAM,CAC7CC,KAAMF,EAAAA,KACHG,QAAQ,gBAAiB,4BACzBC,IAAI,EAAG,cACPC,SAAS,sBAGDC,EAAYV,EAAAA,GAAAA,OAAaW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,4fAwBzBU,EAAqBZ,EAAAA,GAAAA,MAAYa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,8I,oBClC/B,SAASY,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAYf,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbb,KAAM,GACNc,MAAO,GACPC,SAAU,IAEZC,iBAAkBnB,EAElBoB,SAAU,SAACC,EAAQC,GAnBF,IAAAC,IAoBFF,EAlBjBT,GAASY,EAAAA,EAAAA,IAAkB,CACxBrB,KAAMoB,EAAKpB,KACXc,MAAOM,EAAKN,MACZC,SAAUK,EAAKL,YAgBdI,EAAQG,WACV,EAAEC,UAEFZ,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAAD,UACHE,EAAAA,EAAAA,MAAChC,EAAW,CAAA8B,SAAA,EACVE,EAAAA,EAAAA,MAACnB,EAAkB,CAAAiB,SAAA,CAAC,SACpBZ,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CACJ1B,KAAK,OACL2B,YAAY,UACZhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAAC5B,KAAK,aAGrByB,EAAAA,EAAAA,MAACnB,EAAkB,CAAAiB,SAAA,CAAC,WACpBZ,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CACJ1B,KAAK,QACH2B,YAAY,oBACZE,KAAK,aAGPJ,EAAAA,EAAAA,MAACnB,EAAkB,CAAAiB,SAAA,CAAC,aACpBZ,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CACN1B,KAAK,WACH2B,YAAY,sBACZE,KAAK,iBAGPlB,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAAC5B,KAAK,YACrBW,EAAAA,EAAAA,KAACP,EAAS,CAACyB,KAAK,SAAQN,SAAC,mBAKrC,CC9De,SAAUO,IAErB,OACInB,EAAAA,EAAAA,KAAA,OAAAY,UACIZ,EAAAA,EAAAA,KAACH,EAAgB,KAG7B,C","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport * as Yup from 'yup';\n\nexport const InputFields = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    margin-left: 40px;\n    width: 300px;\n`\n\nexport const SubmitSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[a-zA-Z\\s]+$/, 'Only letters are allowed')\n    .min(2, 'Too Short!')\n    .required('Please fill that'),\n});\n\nexport const StyledBtn = styled.button`\n font-size: 17px;\n    font-weight: 600;\n    padding: 10px 15px;\n    margin-top: 15px;\n    border-radius: 4px;\n    color: white; \n   background-color: rgba(99, 212, 240, 0.989);\n  width: 130px;\n  background: grey;\n  border-color: transparent;\n  box-shadow: 0px 1px  2px 0px rgba(86, 114, 110, 0.856); \n\n    cursor: pointer;\n    letter-spacing: 0.5px;\n\n\n    &:hover,\n    &:focus{\n        background-color: blue;\n    box-shadow: 0px 1px  2px 1px rgba(86, 114, 110, 0.856); \n    }\n`\n\nexport const StyledRegFormLabel = styled.label`\nposition: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 20px;\n    font-weight: 500;\n\n`","import { useDispatch } from 'react-redux';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { InputFields, StyledBtn, StyledRegFormLabel } from './RegistrationForm.styled';\nimport { SubmitSchema } from './RegistrationForm.styled';\nimport { registerUserThunk } from 'redux/auth/operations';\n\n\n   \nexport default function RegistrationForm() {\n  const dispatch = useDispatch()\n\n    const onFormSubmit = data => {\n      \n      dispatch(registerUserThunk({\n         name: data.name,\n         email: data.email,\n         password: data.password\n      })\n      );\n   }\n    \n    return(\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={SubmitSchema}\n\n        onSubmit={(values, actions) => {\n          onFormSubmit(values);\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <InputFields>\n            <StyledRegFormLabel>name:\n            <Field \n              name=\"name\"\n              placeholder=\"Jane\"/>\n              <ErrorMessage name=\"name\"\n              />\n            </StyledRegFormLabel>\n            <StyledRegFormLabel>e-mail:\n            <Field \n              name=\"email\"\n                placeholder=\"enter your e-mail\"\n                type=\"text\"\n              />\n              </StyledRegFormLabel>\n              <StyledRegFormLabel>password:\n              <Field \n              name=\"password\"\n                placeholder=\"enter your password\"\n                type=\"password\"\n              />\n              </StyledRegFormLabel>\n              <ErrorMessage name=\"number\" />\n            <StyledBtn type=\"submit\">Register</StyledBtn>\n          </InputFields>\n        </Form> \n    </Formik>\n    )\n};","import  RegistrationForm  from \"components/RegistrationForm/RegistrationForm\";\n\nexport default function  RegisterPage() {\n\n    return (\n        <div>\n            <RegistrationForm/>\n        </div>\n    )\n};\n"],"names":["InputFields","styled","_templateObject","_taggedTemplateLiteral","SubmitSchema","Yup","shape","name","matches","min","required","StyledBtn","_templateObject2","StyledRegFormLabel","_templateObject3","RegistrationForm","dispatch","useDispatch","_jsx","Formik","initialValues","email","password","validationSchema","onSubmit","values","actions","data","registerUserThunk","resetForm","children","Form","_jsxs","Field","placeholder","ErrorMessage","type","RegisterPage"],"sourceRoot":""}
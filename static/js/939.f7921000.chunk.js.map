{"version":3,"file":"static/js/939.f7921000.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/FormInput/FormInput.styled.js","components/FormInput/FormInput .jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getFilter = state => state.filter.filter;\nexport const getContacts = state => state.contact.contacts;\nexport const getLoading = state => state.contact.isLoading;\nexport const getError = state => state.contact.error;","import styled from \"styled-components\";\n\n\nexport const StyledContactList = styled.ul`\n font-size: 18px;\n    font-weight: 600;\n    display: flex;\n    flex-direction: column;\n    padding: 20px; \n    box-shadow: 0px 1px  4px rgba(86, 114, 110, 0.856); \n    background:  rgba(242, 247, 247, 0.92);\n    border-radius: 3px;\n    color: rgb(32, 32, 32);\n\n    @media screen and (min-width: 580px){\n      max-width: 800px;\n      padding: 35px; \n      font-size: 22px;\n    }\n`\nexport const StyledContactItem = styled.li`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    justify-content: flex-start;\n    padding: 20px 0px;\n    border-bottom: 1px solid rgba(193, 194, 194, 0.856);\n\n    .contact{\n    display: flex;\n    gap: 60px;\n    justify-content: space-between;\n    align-items: center;\n\n} \n@media screen and (min-width: 580px){\nflex-direction: row; \nalign-items: center;\njustify-content: space-between;\n\n    }\n`\n\nexport const StyledDeleteBtn = styled.button`\nposition: relative;\n    display: inline-block;\n    font-size: 15px;\n    font-weight: 600;\n     width: 85px; \n    padding: 10px ;\n    border-radius: 4px;\n    text-align: start;\n    background: grey;\n    border-color: transparent;\n    color: white;\n    box-shadow: 0px 1px  2px 0px rgba(86, 114, 110, 0.856);\n    cursor: pointer;\n\n\n    &:hover {\n      background-color: blue;\n    box-shadow: 0px 1px  2px 1px rgba(86, 114, 110, 0.856);  }\n\n    \n  @media screen and (min-width: 580px){\n    font-size: 17px;\n    padding: 13px 12px;\n    width: 100px;\n    }\n`","import { getContacts, getError, getFilter, getLoading } from \"redux/contacts/selectors\";\nimport { StyledContactList, StyledContactItem, StyledDeleteBtn } from \"./ContactList.styled\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContactThunk } from \"redux/contacts/operations\";\n\n\nexport default function ContactsList () {\n\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const isLoading = useSelector(getLoading);\n    const error = useSelector(getError);\n    const dispatch = useDispatch();\n\n\n    const filteredContacts = () => {\n        const lowerCaseFilter = filter.toLocaleLowerCase();\n        return contacts.filter(contact => contact.name.toLocaleLowerCase().includes(lowerCaseFilter));\n    };\n    \nreturn(\n    <div>\n        <StyledContactList>\n            {isLoading && !error && <b>  Loading...</b>}\n            {error && <p>{error.message}</p>}\n            {filteredContacts().map(item => (\n                <StyledContactItem key={item.id}>\n                        <p>{item.name} {item.number} </p>\n                        <StyledDeleteBtn \n                        onClick={() => dispatch(deleteContactThunk(item.id))}\n                        >Delete\n                        </StyledDeleteBtn>\n                </StyledContactItem>\n            ))}\n        </StyledContactList>\n    </div>\n    )\n};","import { useDispatch } from \"react-redux\";\nimport { filterContacts } from \"redux/contacts/filterSlice\";\n\n\nexport default function Filter () {\n    const dispatch = useDispatch();\n   \n   const onInputFilterName = value => {\n        const newFilter = value;\n        dispatch(filterContacts(newFilter))\n    };\n\n    return (\n        <div>\n                <label>Find contacts by name: \n                <input type=\"text\" \n                onChange={evt => onInputFilterName(evt.target.value)}/>\n                </label>\n        </div>\n    )\n}","import styled from \"styled-components\";\nimport * as Yup from 'yup';\n\n\nexport const SubmitSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[a-zA-Z\\s]+$/, 'Only letters are allowed')\n    .min(2, 'Too Short!')\n    .required('Please fill that'),\n  number: Yup.string()\n    .matches(/^\\d{3}-\\d{2}-\\d{2}$/, 'Must be in format: 000-00-00')\n    .required('This field is required, please fill that'),\n});\n\nexport const StyledBtn = styled.button`\n font-size: 17px;\n    font-weight: 600;\n    padding: 10px 15px;\n    margin-top: 15px;\n    border-radius: 4px;\n    color: white; \n   background-color: rgba(99, 212, 240, 0.989);\n  width: 130px;\n  background: grey;\n  border-color: transparent;\n  box-shadow: 0px 1px  2px 0px rgba(86, 114, 110, 0.856); \n\n    cursor: pointer;\n    letter-spacing: 0.5px;\n\n\n    &:hover,\n    &:focus{\n        background-color: blue;\n    box-shadow: 0px 1px  2px 1px rgba(86, 114, 110, 0.856); \n    }\n`\n\nexport const StyledLabel = styled.label`\nposition: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 20px;\n    font-weight: 500;\n`\n\nexport const InputFields = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    margin-left: 40px;\n   \n`","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { InputFields, StyledBtn, StyledLabel } from './FormInput.styled';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContactThunk } from 'redux/contacts/operations';\nimport { SubmitSchema } from './FormInput.styled';\nimport { getContacts } from 'redux/contacts/selectors';\n   \nexport default function FormInput() {\n\n  const dispatch = useDispatch();\n  const prevContacts = useSelector(getContacts);\n\n  const onFormSubmit = data => {\n    \n    const isExist = prevContacts.some(\n      ({ name }) => name.toLocaleLowerCase() === data.name.toLocaleLowerCase());\n            \n    if (isExist) {\n      alert(`$This Name is already in contacts.`);\n      return;\n    };\n    \n    const newContact = data;\n    dispatch(addContactThunk(newContact));\n  };\n    \n    return(\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={SubmitSchema}\n\n        onSubmit={(values, actions) => {\n          onFormSubmit(values);\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <InputFields>\n            <StyledLabel>Name:\n            <Field \n              name=\"name\"\n              placeholder=\"Jane\"/>\n              <ErrorMessage name=\"name\" />\n            </StyledLabel>\n            <StyledLabel>Number:\n            <Field \n              name=\"number\"\n              placeholder=\"658-58-69\"\n              type=\"tel\"/>\n              <ErrorMessage name=\"number\" />\n            </StyledLabel>\n            <StyledBtn type=\"submit\">Add contact</StyledBtn>\n          </InputFields>\n        </Form> \n    </Formik>\n    )\n}","import ContactsList from \"components/ContactsList\";\nimport Filter from \"components/Filter/\";\nimport FormInput from \"components/FormInput\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContactsThunk } from \"redux/contacts/operations\";\nimport { getFilter } from \"redux/contacts/selectors\";\n\n\nexport default function ContactsPage() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <p>Phonebook</p>\n      <FormInput />\n      <p>Contacts</p>\n      {<Filter filter={filter} />}\n      <ContactsList />\n    </div>\n  )\n};"],"names":["getFilter","state","filter","getContacts","contact","contacts","getLoading","isLoading","getError","error","StyledContactList","styled","_templateObject","_taggedTemplateLiteral","StyledContactItem","_templateObject2","StyledDeleteBtn","_templateObject3","ContactsList","useSelector","dispatch","useDispatch","_jsx","children","_jsxs","message","lowerCaseFilter","toLocaleLowerCase","name","includes","filteredContacts","map","item","number","onClick","deleteContactThunk","id","Filter","type","onChange","evt","value","newFilter","filterContacts","onInputFilterName","target","SubmitSchema","Yup","shape","matches","min","required","StyledBtn","StyledLabel","InputFields","FormInput","prevContacts","Formik","initialValues","validationSchema","onSubmit","values","actions","data","some","_ref","alert","newContact","addContactThunk","onFormSubmit","resetForm","Form","Field","placeholder","ErrorMessage","ContactsPage","useEffect","fetchContactsThunk"],"sourceRoot":""}